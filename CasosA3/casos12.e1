####################################################################
#                          CASO DE ESTUDIO 1 y 2                   
#      La falta del uso del delimitador “;” en las sentencias      #
#      Return solo acepta un parámetro seguido de punto y coma     #
####################################################################

func fact (int num): int { 	     
	if (num == 1) {              
		return 1;                 //la falta de “;” hace que esta sentencia 
	} else {                        //sea incorrecta
		return num;// * fact(num - 1); //Dentro de un Return, no se aceptan 
                                         //realizar operaciones.	
       }
}

func fib (int num): int {	      
    if (num == 1) {
        return 1;
    } else if (num == 2) {
        return 1;                      //de nuevo, hace falta el “;”
    } else {
        return 2;// fib;//(num - 1) + fib (num - 2); //Este return tambien hace
                                             //operaciones.
    }
}

int num = 0;                           //de nuevo, hace falta el “;”
int v_fib = 0;                              //Aqui es un error ya que no hay definida
                                      //una estructura de declaración
int v_fact = 0;
println "Dame un numero para hacer unos calculos:" ;
print ">";                              //de nuevo, hace falta el “;”
read num;
v_fact = fact(num);		      
v_fib = fib (num); 	                   //de nuevo, hace falta el “;”
println "El factorial de ";// + num + " es " + fact;
println "El numero de fibonacci de ";// + num + " es " + fib;
//los print no estan bien estructurados segun la definición